// @strict-types

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастройкиЛогирования = ЛогированиеТрафика.ЗагрузитьНастройкиЛогирования();
	НастройкиЛогирования.Свойство("ВключеноЛогирование", ВключеноЛогирование);
	НастройкиЛогирования.Свойство("ПолучениеИсключенийВключено", ПолучениеИсключенийВключено);
	НастройкиЛогирования.Свойство("ПолучатьИсключенияФЗ", ПолучатьИсключенияФЗ);
	НастройкиЛогирования.Свойство("ЗаписыватьВЖР", ЗаписыватьВЖР);
	НастройкиЛогирования.Свойство("ЗаписыватьВРС", ЗаписыватьВРС);
//	ВключенаТрассировка  = НастройкиЛогирования.ВключенаТрассировка;
//	ТаймаутЗапросов      = НастройкиЛогирования.ТаймаутЗапросов;
//	ПовторПриОшибкеСоединения = НастройкиЛогирования.ПовторПриОшибкеСоединения;
	НастройкиЛогирования.Свойство("СрокХранения", СрокХранения);
//	ИмяПеременнойСредыДляСохраненияЛоговHTTP = Константы.ИмяПеременнойСредыДляСохраненияЛоговHTTP.Получить();
	
	ДатаЧтенияЖР = Константы.OneSniffer_ДатаЧтенияЖР.Получить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьДоступность();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользованиеЛогированияПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ПолучениеИсключенийВключеноПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	ГотовоНаСервере();
	Закрыть(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОчиститьНажатие(Элемент)
	
	КомандаОчиститьНажатиеНаСервере(СрокХранения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ГотовоНаСервере()
	
	Настройки = ЛогированиеТрафика.НовыеНастройкиЛогирования();
	Настройки.ВключеноЛогирование  = ВключеноЛогирование;
	Настройки.ПолучениеИсключенийВключено = ПолучениеИсключенийВключено;
	Настройки.ПолучатьИсключенияФЗ = ПолучатьИсключенияФЗ;
	Настройки.ЗаписыватьВЖР = ЗаписыватьВЖР;
	Настройки.ЗаписыватьВРС = ЗаписыватьВРС;
//	Настройки.ВключенаТрассировка  = ВключенаТрассировка;
//	Настройки.ТаймаутЗапросов      = ТаймаутЗапросов;
//	Настройки.ВключеныАвтоответы   = ВключеныАвтоответы;
//	Настройки.ВключеныАвтосценарии = ВключеныАвтосценарии;
//	Настройки.ПовторПриОшибкеСоединения = ПовторПриОшибкеСоединения;
	Настройки.СрокХранения = СрокХранения;
	ЛогированиеТрафика.СохранитьНастройкиЛогирования(Настройки);
//	Константы.ИмяПеременнойСредыДляСохраненияЛоговHTTP.Установить(ИмяПеременнойСредыДляСохраненияЛоговHTTP);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура КомандаОчиститьНажатиеНаСервере(СрокХранения)
	
	РегистрыСведений.ЛогиТрафика.ОчиститьИсторию(СрокХранения);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	
	Элементы.ПолучениеИсключенийВключено.Доступность = ВключеноЛогирование;
	Элементы.ЗаписыватьВЖР.Доступность = ВключеноЛогирование;
	Элементы.ЗаписыватьВРС.Доступность = ВключеноЛогирование;
	Элементы.ПолучатьИсключенияФЗ.Доступность = ВключеноЛогирование И ПолучениеИсключенийВключено;
	Элементы.ДатаЧтенияЖР.Доступность = ВключеноЛогирование И ПолучениеИсключенийВключено;
	
КонецПроцедуры

#КонецОбласти