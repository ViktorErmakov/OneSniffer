// @strict-types


#Область ПрограммныйИнтерфейс

// Вызвать HTTPМетод.
// 
// Параметры:
//  Соединение - HTTPСоединение
//  Метод - Строка
//  Запрос - HTTPЗапрос
//  ИмяВыходногоФайла - Строка
//  ИмяСобытия - Строка
// 
// Возвращаемое значение:
//  HTTPОтвет
//
Функция _ВызватьHTTPМетод(Знач Соединение, Знач Метод, Знач Запрос, Знач ИмяВыходногоФайла, ИмяСобытия = "") Экспорт
	
	// Проверка использования.
	НастройкиЛогирования = ЛогированиеТрафика.ЗагрузитьНастройкиЛогирования();
	Если Не НастройкиЛогирования.ВключеноЛогирование Тогда
		HTTPОтвет = Соединение.ВызватьHTTPМетод(Метод, Запрос, ИмяВыходногоФайла); // HTTPОтвет
		Возврат HTTPОтвет;
	КонецЕсли;
	
	ЛогЗапроса = РегистрыСведений.ЛогиТрафика.ЛогЗапроса(Соединение, Запрос, Метод, ИмяСобытия);
	
	Попытка
		
		HTTPОтвет = Соединение.ВызватьHTTPМетод(Метод, Запрос, ИмяВыходногоФайла); // HTTPОтвет
		ЛогЗапроса.Вставить("HTTPОтвет", HTTPОтвет);
		
	Исключение
		
		// Запишем в лог текст самого исключения.
		Комментарий = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЛогЗапроса.Содержание.ТелоОтвета = Комментарий;
		
		Если ТранзакцияАктивна() Тогда
			
			// В случае если произошло исключение и транзакция была активирована кодом извне, 
			// делаем запись в ЖР, т.к. запись в РС откатиться.
			
			// Подготовим данные для записи исключения.
			ДанныеДляЗаписиИсключения = ЛогированиеТрафика.ДанныеДляЗаписиИсключения(ЛогЗапроса);
			
			ЗаписьЖурналаРегистрации(
				ЛогированиеТрафика.СобытиеВызватьHTTPМетод(), 
				УровеньЖурналаРегистрации.Ошибка,, 
				ДанныеДляЗаписиИсключения, 
				Комментарий);
			
			ВызватьИсключение;
			
		КонецЕсли;
		
		// Запись лога вне транзакции
		РегистрыСведений.ЛогиТрафика.ЗаписатьЛог(ЛогЗапроса, ИмяВыходногоФайла);
		
		ВызватьИсключение;
		
	КонецПопытки;
	
	РегистрыСведений.ЛогиТрафика.ЗаписатьЛог(ЛогЗапроса, ИмяВыходногоФайла);
	
	Возврат ЛогЗапроса.HTTPОтвет;
	
КонецФункции

#КонецОбласти